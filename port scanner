import socket
import threading
from queue import Queue

# Function to scan a single port
def scan_port(target, port, print_lock):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(1)
    result = sock.connect_ex((target, port))
    sock.close()
    with print_lock:
        if result == 0:
            print(f"Port {port} is open")
        else:
            print(f"Port {port} is closed")

# Worker function to get ports from the queue and scan them
def worker(target, print_lock, q):
    while not q.empty():
        port = q.get()
        scan_port(target, port, print_lock)
        q.task_done()

# Main function to set up the queue and threads
def main():
    target = input("Enter the IP address or hostname to scan: ")
    start_port = int(input("Enter starting port: "))
    end_port = int(input("Enter ending port: "))
    num_threads = int(input("Enter number of threads: "))

    print_lock = threading.Lock()
    q = Queue()

    # Add ports to the queue
    for port in range(start_port, end_port + 1):
        q.put(port)

    # Create and start threads
    for _ in range(num_threads):
        t = threading.Thread(target=worker, args=(target, print_lock, q))
        t.daemon = True
        t.start()

    q.join()  # Wait for all tasks to be completed
    print("Scan complete.")

if __name__ == "__main__":
    main()

